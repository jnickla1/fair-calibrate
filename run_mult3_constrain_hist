#!/bin/bash
#SBATCH -J FAIRc_cur
#SBATCH -t 0:20:00
# Should only take 6 mins max
#SBATCH -n 1
#SBATCH --mem=16gb
#SBATCH --array=0-92

#93 Use '%A' for array-job ID, '%J' for job ID and '%a' for task ID
#####SBATCH -e arrayjob-%a.err
#SBATCH -o arrayjob-%a.out

echo "Starting job $SLURM_ARRAY_TASK_ID on $HOSTNAME"

# usage: ./run

eval "$(conda shell.bash hook)"
conda activate fair2
module load r
# Don't forget to set your environment variables in .env
if [ -f .env ]
then
  export $(cat .env2 | xargs)
fi

# Base path to your fair-calibrate input tree
script_dir=$PWD
base_dir="${script_dir}/input/fair-${FAIR_VERSION}/v${CALIBRATION_VERSION}/${CONSTRAINT_SET}"

unset CUTOFF_YEAR
start=$SECONDS
export ENSEMBLE_RUN=1
# 2) Constraining for multiple cutoff years
##########

#for cutoff in $(seq 1930 1933); do #2024
 
export CUTOFF_YEAR=$(($SLURM_ARRAY_TASK_ID+1930))
  echo $(( SECONDS - start ))
  echo ">>> Constraining with cutoff year = ${CUTOFF_YEAR}"
  cd "${base_dir}/constraining"
  file_array=( $(\ls [0-9][0-9]_*.*) )
  for filekey in "${!file_array[@]}"; do
    echo $filekey
    if [ $filekey -eq 3 ]; then  #-lt 4 for debugging specific constraining files
       file=${file_array[$filekey]}
    echo "####  â€¢ constraining/${file}####"
    echo $(( SECONDS - start ))
    chmod +x "$file"
    "./$file" || { echo "ERROR in constraining/${file} for cutoff ${CUTOFF_YEAR}"; exit 1; }
    fi
  done

#done

echo $(( SECONDS - start ))
echo "All done!"
